{"ast":null,"code":"import { useRef } from 'react';\nimport useWillUnmount from './useWillUnmount';\nimport useMounted from './useMounted';\n/**\n * Returns a controller object for setting a timeout that is properly cleaned up\n * once the component unmounts. New timeouts cancel and replace existing ones.\n */\n\nexport default function useTimeout() {\n  var isMounted = useMounted();\n  var handle = useRef();\n\n  var clear = function clear() {\n    return clearTimeout(handle.current);\n  };\n\n  useWillUnmount(clear);\n  return {\n    set: function set(fn, ms) {\n      if (!isMounted()) return;\n      clear();\n      handle.current = setTimeout(fn, ms);\n    },\n    clear: clear\n  };\n}","map":{"version":3,"sources":["/Users/sandeepanand/Public/projects/Vacation-Planner/planner-app/node_modules/@restart/hooks/esm/useTimeout.js"],"names":["useRef","useWillUnmount","useMounted","useTimeout","isMounted","handle","clear","clearTimeout","current","set","fn","ms","setTimeout"],"mappings":"AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA;;;;;AAKA,eAAe,SAASC,UAAT,GAAsB;AACnC,MAAIC,SAAS,GAAGF,UAAU,EAA1B;AACA,MAAIG,MAAM,GAAGL,MAAM,EAAnB;;AAEA,MAAIM,KAAK,GAAG,SAASA,KAAT,GAAiB;AAC3B,WAAOC,YAAY,CAACF,MAAM,CAACG,OAAR,CAAnB;AACD,GAFD;;AAIAP,EAAAA,cAAc,CAACK,KAAD,CAAd;AACA,SAAO;AACLG,IAAAA,GAAG,EAAE,SAASA,GAAT,CAAaC,EAAb,EAAiBC,EAAjB,EAAqB;AACxB,UAAI,CAACP,SAAS,EAAd,EAAkB;AAClBE,MAAAA,KAAK;AACLD,MAAAA,MAAM,CAACG,OAAP,GAAiBI,UAAU,CAACF,EAAD,EAAKC,EAAL,CAA3B;AACD,KALI;AAMLL,IAAAA,KAAK,EAAEA;AANF,GAAP;AAQD","sourcesContent":["import { useRef } from 'react';\nimport useWillUnmount from './useWillUnmount';\nimport useMounted from './useMounted';\n/**\n * Returns a controller object for setting a timeout that is properly cleaned up\n * once the component unmounts. New timeouts cancel and replace existing ones.\n */\n\nexport default function useTimeout() {\n  var isMounted = useMounted();\n  var handle = useRef();\n\n  var clear = function clear() {\n    return clearTimeout(handle.current);\n  };\n\n  useWillUnmount(clear);\n  return {\n    set: function set(fn, ms) {\n      if (!isMounted()) return;\n      clear();\n      handle.current = setTimeout(fn, ms);\n    },\n    clear: clear\n  };\n}"]},"metadata":{},"sourceType":"module"}