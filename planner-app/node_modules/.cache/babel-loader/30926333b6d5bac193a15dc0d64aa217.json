{"ast":null,"code":"import _objectSpread from \"/Users/sandeepanand/Public/projects/Vacation-Planner/planner-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/sandeepanand/Public/projects/Vacation-Planner/planner-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from 'react';\n\nconst useForm = callback => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  const handleSubmit = event => {\n    if (event) {\n      event.preventDefault();\n      var proxyUrl = 'https://cors-anywhere.herokuapp.com/',\n          targetUrl = 'https://best-vacation-planner.herokuapp.com/login',\n          testUrl = 'http://www.seekerify.com/';\n      fetch(proxyUrl + targetUrl, {\n        method: 'POST',\n        headers: {\n          'content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(values),\n        credentials: 'include'\n      }).then(response => {\n        return response.text().then(text => {\n          console.log('Logged In..');\n        });\n      }).then(values => {\n        console.log('Success:');\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n      callback();\n    }\n  };\n\n  const handleChange = event => {\n    event.persist();\n    setValues(values => _objectSpread({}, values, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values\n  };\n};\n\nexport default useForm;","map":{"version":3,"sources":["/Users/sandeepanand/Public/projects/Vacation-Planner/planner-app/src/components/useForm.js"],"names":["useState","useForm","callback","values","setValues","handleSubmit","event","preventDefault","proxyUrl","targetUrl","testUrl","fetch","method","headers","body","JSON","stringify","credentials","then","response","text","console","log","catch","error","handleChange","persist","target","name","value"],"mappings":";;AAAA,SAAQA,QAAR,QAAuB,OAAvB;;AACA,MAAMC,OAAO,GAAIC,QAAD,IAAc;AAAA,oBACEF,QAAQ,CAAC,EAAD,CADV;AAAA;AAAA,QACnBG,MADmB;AAAA,QACXC,SADW;;AAG1B,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAIA,KAAJ,EAAW;AACPA,MAAAA,KAAK,CAACC,cAAN;AACJ,UAAIC,QAAQ,GAAG,sCAAf;AAAA,UACAC,SAAS,GAAG,mDADZ;AAAA,UAEAC,OAAO,GAAG,2BAFV;AAIAC,MAAAA,KAAK,CAAGH,QAAQ,GAACC,SAAZ,EAAuB;AACxBG,QAAAA,MAAM,EAAE,MADgB;AAExBC,QAAAA,OAAO,EAAE;AACX,0BAAgB,kBADL;AAEX,oBAAW;AAFA,SAFe;AAMxBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,MAAf,CANkB;AAOxBc,QAAAA,WAAW,EAAE;AAPW,OAAvB,CAAL,CASCC,IATD,CASMC,QAAQ,IAAI;AACd,eAAOA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBE,IAAI,IAAI;AAChCC,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH,SAFM,CAAP;AAGC,OAbL,EAcCJ,IAdD,CAcOf,MAAD,IAAY;AACdkB,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,OAhBD,EAiBCC,KAjBD,CAiBQC,KAAD,IAAW;AACdH,QAAAA,OAAO,CAACG,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACP,OAnBG;AAoBAtB,MAAAA,QAAQ;AACX;AACA,GA7BD;;AA+BA,QAAMuB,YAAY,GAAInB,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACoB,OAAN;AACAtB,IAAAA,SAAS,CAACD,MAAM,sBAAUA,MAAV;AACZ,OAACG,KAAK,CAACqB,MAAN,CAAaC,IAAd,GAAqBtB,KAAK,CAACqB,MAAN,CAAaE;AADtB,MAAP,CAAT;AAEN,GAJE;;AAKA,SAAO;AACHJ,IAAAA,YADG;AAEHpB,IAAAA,YAFG;AAGHF,IAAAA;AAHG,GAAP;AAKH,CA5CD;;AA8CA,eAAeF,OAAf","sourcesContent":["import {useState} from 'react'\nconst useForm = (callback) => {\n    const [values, setValues] = useState({})\n\n    const handleSubmit = (event) => {\n        if (event) {\n            event.preventDefault()\n        var proxyUrl = 'https://cors-anywhere.herokuapp.com/',\n        targetUrl = 'https://best-vacation-planner.herokuapp.com/login',\n        testUrl = 'http://www.seekerify.com/'\n\n        fetch ( proxyUrl+targetUrl, {\n            method: 'POST',\n            headers: {\n\t\t        'content-Type': 'application/json',\n\t\t        'Accept' : 'application/json',\n\t\t    },\n            body: JSON.stringify(values),\n            credentials: 'include'\n        })\n        .then(response => {\n            return response.text().then(text => {\n                console.log('Logged In..')\n            })\n            })\n        .then((values) => {\n            console.log('Success:')\n        })\n        .catch((error) => {\n            console.error('Error:', error)\n    })\n        callback()\n    }\n    }\n\n    const handleChange = (event) => {\n        event.persist()\n        setValues(values => ({ ...values,\n            [event.target.name]: event.target.value })\n)}\n    return {\n        handleChange,\n        handleSubmit,\n        values\n    }\n}\n\nexport default useForm\n"]},"metadata":{},"sourceType":"module"}