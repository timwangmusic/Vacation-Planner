{"version":3,"sources":["video-worker.js"],"names":["modules","installedModules","__webpack_require__","moduleId","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_global2","_interopRequireDefault","_videoWorker2","obj","default","VideoWorker","global","win","window","self","g","_typeof","Symbol","iterator","constructor","this","Function","eval","e","value","_createClass","defineProperties","target","props","length","descriptor","writable","key","Constructor","protoProps","staticProps","Deferred","_done","_fail","execute","list","args","Array","slice","apply","resolve","arguments","reject","done","callback","push","fail","ID","YoutubeAPIadded","VimeoAPIadded","loadingYoutubePlayer","loadingVimeoPlayer","loadingYoutubeDefer","loadingVimeoDefer","url","options","instance","TypeError","_classCallCheck","options_default","autoplay","loop","mute","volume","showContols","startTime","endTime","extend","videoID","parseURL","loadAPI","init","out","_arguments","keys","forEach","match","videoFormats","result","ready","Youtube","Vimeo","Local","split","val","type","userEventsList","_this","_this2","start","player","playVideo","seekTo","YT","PlayerState","PLAYING","getPlayerState","setCurrentTime","getPaused","then","paused","play","currentTime","pauseVideo","pause","setVolume","$video","muted","unMute","undefined","getVolume","isMuted","videoImage","availableSizes","step","tempImg","Image","onload","naturalWidth","width","src","request","XMLHttpRequest","open","onreadystatechange","readyState","status","response","JSON","parse","responseText","thumbnail_large","send","getVideo","onAPIready","hiddenDiv","document","createElement","style","display","playerOptions","videoId","playerVars","autohide","rel","playsinline","iv_load_policy","modestbranding","controls","showinfo","disablekb","ytStarted","ytProgressInterval","events","onReady","fire","getDuration","setInterval","onStateChange","data","ENDED","PAUSED","getCurrentTime","clearInterval","firstInit","div","setAttribute","playerID","appendChild","body","Player","getElementById","videoWidth","parseInt","getAttribute","videoHeight","id","autopause","transparent","badge","byline","portrait","title","playerOptionsString","encodeURIComponent","getVideoWidth","getVideoHeight","height","vmStarted","on","seconds","element","source","locStarted","addEventListener","tag","head","getElementsByTagName","loaded","onYouTubeIframeAPIReady","vimeoInterval"],"mappings":"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","file":"video-worker.min.js","sourcesContent":["/*!\n * Name    : Video Worker\n * Version : 1.1.6\n * Author  : nK <https://nkdev.info>\n * GitHub  : https://github.com/nk-o/video-worker\n */\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _global = __webpack_require__(2);\n\nvar _global2 = _interopRequireDefault(_global);\n\nvar _videoWorker = __webpack_require__(4);\n\nvar _videoWorker2 = _interopRequireDefault(_videoWorker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_global2.default.VideoWorker = _videoWorker2.default;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nvar win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\") {\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar g;\n\n// This works in non-strict mode\ng = function () {\n\treturn this;\n}();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Deferred\n// thanks http://stackoverflow.com/questions/18096715/implement-deferred-object-without-using-jquery\nfunction Deferred() {\n    this._done = [];\n    this._fail = [];\n}\nDeferred.prototype = {\n    execute: function execute(list, args) {\n        var i = list.length;\n        args = Array.prototype.slice.call(args);\n        while (i--) {\n            list[i].apply(null, args);\n        }\n    },\n    resolve: function resolve() {\n        this.execute(this._done, arguments);\n    },\n    reject: function reject() {\n        this.execute(this._fail, arguments);\n    },\n    done: function done(callback) {\n        this._done.push(callback);\n    },\n    fail: function fail(callback) {\n        this._fail.push(callback);\n    }\n};\n\nvar ID = 0;\nvar YoutubeAPIadded = 0;\nvar VimeoAPIadded = 0;\nvar loadingYoutubePlayer = 0;\nvar loadingVimeoPlayer = 0;\nvar loadingYoutubeDefer = new Deferred();\nvar loadingVimeoDefer = new Deferred();\n\nvar VideoWorker = function () {\n    function VideoWorker(url, options) {\n        _classCallCheck(this, VideoWorker);\n\n        var self = this;\n\n        self.url = url;\n\n        self.options_default = {\n            autoplay: false,\n            loop: false,\n            mute: false,\n            volume: 100,\n            showContols: true,\n\n            // start / end video time in seconds\n            startTime: 0,\n            endTime: 0\n        };\n\n        self.options = self.extend({}, self.options_default, options);\n\n        // check URL\n        self.videoID = self.parseURL(url);\n\n        // init\n        if (self.videoID) {\n            self.ID = ID++;\n            self.loadAPI();\n            self.init();\n        }\n    }\n\n    // Extend like jQuery.extend\n\n\n    _createClass(VideoWorker, [{\n        key: 'extend',\n        value: function extend(out) {\n            var _arguments = arguments;\n\n            out = out || {};\n            Object.keys(arguments).forEach(function (i) {\n                if (!_arguments[i]) {\n                    return;\n                }\n                Object.keys(_arguments[i]).forEach(function (key) {\n                    out[key] = _arguments[i][key];\n                });\n            });\n            return out;\n        }\n    }, {\n        key: 'parseURL',\n        value: function parseURL(url) {\n            // parse youtube ID\n            function getYoutubeID(ytUrl) {\n                // eslint-disable-next-line no-useless-escape\n                var regExp = /.*(?:youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=)([^#\\&\\?]*).*/;\n                var match = ytUrl.match(regExp);\n                return match && match[1].length === 11 ? match[1] : false;\n            }\n\n            // parse vimeo ID\n            function getVimeoID(vmUrl) {\n                // eslint-disable-next-line no-useless-escape\n                var regExp = /https?:\\/\\/(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/([^\\/]*)\\/videos\\/|album\\/(\\d+)\\/video\\/|video\\/|)(\\d+)(?:$|\\/|\\?)/;\n                var match = vmUrl.match(regExp);\n                return match && match[3] ? match[3] : false;\n            }\n\n            // parse local string\n            function getLocalVideos(locUrl) {\n                // eslint-disable-next-line no-useless-escape\n                var videoFormats = locUrl.split(/,(?=mp4\\:|webm\\:|ogv\\:|ogg\\:)/);\n                var result = {};\n                var ready = 0;\n                videoFormats.forEach(function (val) {\n                    // eslint-disable-next-line no-useless-escape\n                    var match = val.match(/^(mp4|webm|ogv|ogg)\\:(.*)/);\n                    if (match && match[1] && match[2]) {\n                        // eslint-disable-next-line prefer-destructuring\n                        result[match[1] === 'ogv' ? 'ogg' : match[1]] = match[2];\n                        ready = 1;\n                    }\n                });\n                return ready ? result : false;\n            }\n\n            var Youtube = getYoutubeID(url);\n            var Vimeo = getVimeoID(url);\n            var Local = getLocalVideos(url);\n\n            if (Youtube) {\n                this.type = 'youtube';\n                return Youtube;\n            } else if (Vimeo) {\n                this.type = 'vimeo';\n                return Vimeo;\n            } else if (Local) {\n                this.type = 'local';\n                return Local;\n            }\n\n            return false;\n        }\n    }, {\n        key: 'isValid',\n        value: function isValid() {\n            return !!this.videoID;\n        }\n\n        // events\n\n    }, {\n        key: 'on',\n        value: function on(name, callback) {\n            this.userEventsList = this.userEventsList || [];\n\n            // add new callback in events list\n            (this.userEventsList[name] || (this.userEventsList[name] = [])).push(callback);\n        }\n    }, {\n        key: 'off',\n        value: function off(name, callback) {\n            var _this = this;\n\n            if (!this.userEventsList || !this.userEventsList[name]) {\n                return;\n            }\n\n            if (!callback) {\n                delete this.userEventsList[name];\n            } else {\n                this.userEventsList[name].forEach(function (val, key) {\n                    if (val === callback) {\n                        _this.userEventsList[name][key] = false;\n                    }\n                });\n            }\n        }\n    }, {\n        key: 'fire',\n        value: function fire(name) {\n            var _this2 = this;\n\n            var args = [].slice.call(arguments, 1);\n            if (this.userEventsList && typeof this.userEventsList[name] !== 'undefined') {\n                this.userEventsList[name].forEach(function (val) {\n                    // call with all arguments\n                    if (val) {\n                        val.apply(_this2, args);\n                    }\n                });\n            }\n        }\n    }, {\n        key: 'play',\n        value: function play(start) {\n            var self = this;\n            if (!self.player) {\n                return;\n            }\n\n            if (self.type === 'youtube' && self.player.playVideo) {\n                if (typeof start !== 'undefined') {\n                    self.player.seekTo(start || 0);\n                }\n                if (YT.PlayerState.PLAYING !== self.player.getPlayerState()) {\n                    self.player.playVideo();\n                }\n            }\n\n            if (self.type === 'vimeo') {\n                if (typeof start !== 'undefined') {\n                    self.player.setCurrentTime(start);\n                }\n                self.player.getPaused().then(function (paused) {\n                    if (paused) {\n                        self.player.play();\n                    }\n                });\n            }\n\n            if (self.type === 'local') {\n                if (typeof start !== 'undefined') {\n                    self.player.currentTime = start;\n                }\n                if (self.player.paused) {\n                    self.player.play();\n                }\n            }\n        }\n    }, {\n        key: 'pause',\n        value: function pause() {\n            var self = this;\n            if (!self.player) {\n                return;\n            }\n\n            if (self.type === 'youtube' && self.player.pauseVideo) {\n                if (YT.PlayerState.PLAYING === self.player.getPlayerState()) {\n                    self.player.pauseVideo();\n                }\n            }\n\n            if (self.type === 'vimeo') {\n                self.player.getPaused().then(function (paused) {\n                    if (!paused) {\n                        self.player.pause();\n                    }\n                });\n            }\n\n            if (self.type === 'local') {\n                if (!self.player.paused) {\n                    self.player.pause();\n                }\n            }\n        }\n    }, {\n        key: 'mute',\n        value: function mute() {\n            var self = this;\n            if (!self.player) {\n                return;\n            }\n\n            if (self.type === 'youtube' && self.player.mute) {\n                self.player.mute();\n            }\n\n            if (self.type === 'vimeo' && self.player.setVolume) {\n                self.player.setVolume(0);\n            }\n\n            if (self.type === 'local') {\n                self.$video.muted = true;\n            }\n        }\n    }, {\n        key: 'unmute',\n        value: function unmute() {\n            var self = this;\n            if (!self.player) {\n                return;\n            }\n\n            if (self.type === 'youtube' && self.player.mute) {\n                self.player.unMute();\n            }\n\n            if (self.type === 'vimeo' && self.player.setVolume) {\n                self.player.setVolume(self.options.volume);\n            }\n\n            if (self.type === 'local') {\n                self.$video.muted = false;\n            }\n        }\n    }, {\n        key: 'setVolume',\n        value: function setVolume() {\n            var volume = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            var self = this;\n            if (!self.player || !volume) {\n                return;\n            }\n\n            if (self.type === 'youtube' && self.player.setVolume) {\n                self.player.setVolume(volume);\n            }\n\n            if (self.type === 'vimeo' && self.player.setVolume) {\n                self.player.setVolume(volume);\n            }\n\n            if (self.type === 'local') {\n                self.$video.volume = volume / 100;\n            }\n        }\n    }, {\n        key: 'getVolume',\n        value: function getVolume(callback) {\n            var self = this;\n            if (!self.player) {\n                callback(false);\n                return;\n            }\n\n            if (self.type === 'youtube' && self.player.getVolume) {\n                callback(self.player.getVolume());\n            }\n\n            if (self.type === 'vimeo' && self.player.getVolume) {\n                self.player.getVolume().then(function (volume) {\n                    callback(volume);\n                });\n            }\n\n            if (self.type === 'local') {\n                callback(self.$video.volume * 100);\n            }\n        }\n    }, {\n        key: 'getMuted',\n        value: function getMuted(callback) {\n            var self = this;\n            if (!self.player) {\n                callback(null);\n                return;\n            }\n\n            if (self.type === 'youtube' && self.player.isMuted) {\n                callback(self.player.isMuted());\n            }\n\n            if (self.type === 'vimeo' && self.player.getVolume) {\n                self.player.getVolume().then(function (volume) {\n                    callback(!!volume);\n                });\n            }\n\n            if (self.type === 'local') {\n                callback(self.$video.muted);\n            }\n        }\n    }, {\n        key: 'getImageURL',\n        value: function getImageURL(callback) {\n            var self = this;\n\n            if (self.videoImage) {\n                callback(self.videoImage);\n                return;\n            }\n\n            if (self.type === 'youtube') {\n                var availableSizes = ['maxresdefault', 'sddefault', 'hqdefault', '0'];\n                var step = 0;\n\n                var tempImg = new Image();\n                tempImg.onload = function () {\n                    // if no thumbnail, youtube add their own image with width = 120px\n                    if ((this.naturalWidth || this.width) !== 120 || step === availableSizes.length - 1) {\n                        // ok\n                        self.videoImage = 'https://img.youtube.com/vi/' + self.videoID + '/' + availableSizes[step] + '.jpg';\n                        callback(self.videoImage);\n                    } else {\n                        // try another size\n                        step++;\n                        this.src = 'https://img.youtube.com/vi/' + self.videoID + '/' + availableSizes[step] + '.jpg';\n                    }\n                };\n                tempImg.src = 'https://img.youtube.com/vi/' + self.videoID + '/' + availableSizes[step] + '.jpg';\n            }\n\n            if (self.type === 'vimeo') {\n                var request = new XMLHttpRequest();\n                request.open('GET', 'https://vimeo.com/api/v2/video/' + self.videoID + '.json', true);\n                request.onreadystatechange = function () {\n                    if (this.readyState === 4) {\n                        if (this.status >= 200 && this.status < 400) {\n                            // Success!\n                            var response = JSON.parse(this.responseText);\n                            self.videoImage = response[0].thumbnail_large;\n                            callback(self.videoImage);\n                        } else {\n                            // Error :(\n                        }\n                    }\n                };\n                request.send();\n                request = null;\n            }\n        }\n\n        // fallback to the old version.\n\n    }, {\n        key: 'getIframe',\n        value: function getIframe(callback) {\n            this.getVideo(callback);\n        }\n    }, {\n        key: 'getVideo',\n        value: function getVideo(callback) {\n            var self = this;\n\n            // return generated video block\n            if (self.$video) {\n                callback(self.$video);\n                return;\n            }\n\n            // generate new video block\n            self.onAPIready(function () {\n                var hiddenDiv = void 0;\n                if (!self.$video) {\n                    hiddenDiv = document.createElement('div');\n                    hiddenDiv.style.display = 'none';\n                }\n\n                // Youtube\n                if (self.type === 'youtube') {\n                    self.playerOptions = {};\n                    self.playerOptions.videoId = self.videoID;\n                    self.playerOptions.playerVars = {\n                        autohide: 1,\n                        rel: 0,\n                        autoplay: 0,\n                        // autoplay enable on mobile devices\n                        playsinline: 1\n                    };\n\n                    // hide controls\n                    if (!self.options.showContols) {\n                        self.playerOptions.playerVars.iv_load_policy = 3;\n                        self.playerOptions.playerVars.modestbranding = 1;\n                        self.playerOptions.playerVars.controls = 0;\n                        self.playerOptions.playerVars.showinfo = 0;\n                        self.playerOptions.playerVars.disablekb = 1;\n                    }\n\n                    // events\n                    var ytStarted = void 0;\n                    var ytProgressInterval = void 0;\n                    self.playerOptions.events = {\n                        onReady: function onReady(e) {\n                            // mute\n                            if (self.options.mute) {\n                                e.target.mute();\n                            } else if (self.options.volume) {\n                                e.target.setVolume(self.options.volume);\n                            }\n\n                            // autoplay\n                            if (self.options.autoplay) {\n                                self.play(self.options.startTime);\n                            }\n                            self.fire('ready', e);\n\n                            // For seamless loops, set the endTime to 0.1 seconds less than the video's duration\n                            // https://github.com/nk-o/video-worker/issues/2\n                            if (self.options.loop && !self.options.endTime) {\n                                var secondsOffset = 0.1;\n                                self.options.endTime = self.player.getDuration() - secondsOffset;\n                            }\n\n                            // volumechange\n                            setInterval(function () {\n                                self.getVolume(function (volume) {\n                                    if (self.options.volume !== volume) {\n                                        self.options.volume = volume;\n                                        self.fire('volumechange', e);\n                                    }\n                                });\n                            }, 150);\n                        },\n                        onStateChange: function onStateChange(e) {\n                            // loop\n                            if (self.options.loop && e.data === YT.PlayerState.ENDED) {\n                                self.play(self.options.startTime);\n                            }\n                            if (!ytStarted && e.data === YT.PlayerState.PLAYING) {\n                                ytStarted = 1;\n                                self.fire('started', e);\n                            }\n                            if (e.data === YT.PlayerState.PLAYING) {\n                                self.fire('play', e);\n                            }\n                            if (e.data === YT.PlayerState.PAUSED) {\n                                self.fire('pause', e);\n                            }\n                            if (e.data === YT.PlayerState.ENDED) {\n                                self.fire('ended', e);\n                            }\n\n                            // progress check\n                            if (e.data === YT.PlayerState.PLAYING) {\n                                ytProgressInterval = setInterval(function () {\n                                    self.fire('timeupdate', e);\n\n                                    // check for end of video and play again or stop\n                                    if (self.options.endTime && self.player.getCurrentTime() >= self.options.endTime) {\n                                        if (self.options.loop) {\n                                            self.play(self.options.startTime);\n                                        } else {\n                                            self.pause();\n                                        }\n                                    }\n                                }, 150);\n                            } else {\n                                clearInterval(ytProgressInterval);\n                            }\n                        }\n                    };\n\n                    var firstInit = !self.$video;\n                    if (firstInit) {\n                        var div = document.createElement('div');\n                        div.setAttribute('id', self.playerID);\n                        hiddenDiv.appendChild(div);\n                        document.body.appendChild(hiddenDiv);\n                    }\n                    self.player = self.player || new window.YT.Player(self.playerID, self.playerOptions);\n                    if (firstInit) {\n                        self.$video = document.getElementById(self.playerID);\n\n                        // get video width and height\n                        self.videoWidth = parseInt(self.$video.getAttribute('width'), 10) || 1280;\n                        self.videoHeight = parseInt(self.$video.getAttribute('height'), 10) || 720;\n                    }\n                }\n\n                // Vimeo\n                if (self.type === 'vimeo') {\n                    self.playerOptions = {\n                        id: self.videoID,\n                        autopause: 0,\n                        transparent: 0,\n                        autoplay: self.options.autoplay ? 1 : 0,\n                        loop: self.options.loop ? 1 : 0,\n                        muted: self.options.mute ? 1 : 0\n                    };\n\n                    if (self.options.volume) {\n                        self.playerOptions.volume = self.options.volume;\n                    }\n\n                    // hide controls\n                    if (!self.options.showContols) {\n                        self.playerOptions.badge = 0;\n                        self.playerOptions.byline = 0;\n                        self.playerOptions.portrait = 0;\n                        self.playerOptions.title = 0;\n                    }\n\n                    if (!self.$video) {\n                        var playerOptionsString = '';\n                        Object.keys(self.playerOptions).forEach(function (key) {\n                            if (playerOptionsString !== '') {\n                                playerOptionsString += '&';\n                            }\n                            playerOptionsString += key + '=' + encodeURIComponent(self.playerOptions[key]);\n                        });\n\n                        // we need to create iframe manually because when we create it using API\n                        // js events won't triggers after iframe moved to another place\n                        self.$video = document.createElement('iframe');\n                        self.$video.setAttribute('id', self.playerID);\n                        self.$video.setAttribute('src', 'https://player.vimeo.com/video/' + self.videoID + '?' + playerOptionsString);\n                        self.$video.setAttribute('frameborder', '0');\n                        self.$video.setAttribute('mozallowfullscreen', '');\n                        self.$video.setAttribute('allowfullscreen', '');\n\n                        hiddenDiv.appendChild(self.$video);\n                        document.body.appendChild(hiddenDiv);\n                    }\n                    self.player = self.player || new Vimeo.Player(self.$video, self.playerOptions);\n\n                    // set current time for autoplay\n                    if (self.options.startTime && self.options.autoplay) {\n                        self.player.setCurrentTime(self.options.startTime);\n                    }\n\n                    // get video width and height\n                    self.player.getVideoWidth().then(function (width) {\n                        self.videoWidth = width || 1280;\n                    });\n                    self.player.getVideoHeight().then(function (height) {\n                        self.videoHeight = height || 720;\n                    });\n\n                    // events\n                    var vmStarted = void 0;\n                    self.player.on('timeupdate', function (e) {\n                        if (!vmStarted) {\n                            self.fire('started', e);\n                            vmStarted = 1;\n                        }\n\n                        self.fire('timeupdate', e);\n\n                        // check for end of video and play again or stop\n                        if (self.options.endTime) {\n                            if (self.options.endTime && e.seconds >= self.options.endTime) {\n                                if (self.options.loop) {\n                                    self.play(self.options.startTime);\n                                } else {\n                                    self.pause();\n                                }\n                            }\n                        }\n                    });\n                    self.player.on('play', function (e) {\n                        self.fire('play', e);\n\n                        // check for the start time and start with it\n                        if (self.options.startTime && e.seconds === 0) {\n                            self.play(self.options.startTime);\n                        }\n                    });\n                    self.player.on('pause', function (e) {\n                        self.fire('pause', e);\n                    });\n                    self.player.on('ended', function (e) {\n                        self.fire('ended', e);\n                    });\n                    self.player.on('loaded', function (e) {\n                        self.fire('ready', e);\n                    });\n                    self.player.on('volumechange', function (e) {\n                        self.fire('volumechange', e);\n                    });\n                }\n\n                // Local\n                function addSourceToLocal(element, src, type) {\n                    var source = document.createElement('source');\n                    source.src = src;\n                    source.type = type;\n                    element.appendChild(source);\n                }\n                if (self.type === 'local') {\n                    if (!self.$video) {\n                        self.$video = document.createElement('video');\n\n                        // show controls\n                        if (self.options.showContols) {\n                            self.$video.controls = true;\n                        }\n\n                        // mute\n                        if (self.options.mute) {\n                            self.$video.muted = true;\n                        } else if (self.$video.volume) {\n                            self.$video.volume = self.options.volume / 100;\n                        }\n\n                        // loop\n                        if (self.options.loop) {\n                            self.$video.loop = true;\n                        }\n\n                        // autoplay enable on mobile devices\n                        self.$video.setAttribute('playsinline', '');\n                        self.$video.setAttribute('webkit-playsinline', '');\n\n                        self.$video.setAttribute('id', self.playerID);\n                        hiddenDiv.appendChild(self.$video);\n                        document.body.appendChild(hiddenDiv);\n\n                        Object.keys(self.videoID).forEach(function (key) {\n                            addSourceToLocal(self.$video, self.videoID[key], 'video/' + key);\n                        });\n                    }\n\n                    self.player = self.player || self.$video;\n\n                    var locStarted = void 0;\n                    self.player.addEventListener('playing', function (e) {\n                        if (!locStarted) {\n                            self.fire('started', e);\n                        }\n                        locStarted = 1;\n                    });\n                    self.player.addEventListener('timeupdate', function (e) {\n                        self.fire('timeupdate', e);\n\n                        // check for end of video and play again or stop\n                        if (self.options.endTime) {\n                            if (self.options.endTime && this.currentTime >= self.options.endTime) {\n                                if (self.options.loop) {\n                                    self.play(self.options.startTime);\n                                } else {\n                                    self.pause();\n                                }\n                            }\n                        }\n                    });\n                    self.player.addEventListener('play', function (e) {\n                        self.fire('play', e);\n                    });\n                    self.player.addEventListener('pause', function (e) {\n                        self.fire('pause', e);\n                    });\n                    self.player.addEventListener('ended', function (e) {\n                        self.fire('ended', e);\n                    });\n                    self.player.addEventListener('loadedmetadata', function () {\n                        // get video width and height\n                        self.videoWidth = this.videoWidth || 1280;\n                        self.videoHeight = this.videoHeight || 720;\n\n                        self.fire('ready');\n\n                        // autoplay\n                        if (self.options.autoplay) {\n                            self.play(self.options.startTime);\n                        }\n                    });\n                    self.player.addEventListener('volumechange', function (e) {\n                        self.getVolume(function (volume) {\n                            self.options.volume = volume;\n                        });\n                        self.fire('volumechange', e);\n                    });\n                }\n                callback(self.$video);\n            });\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            var self = this;\n\n            self.playerID = 'VideoWorker-' + self.ID;\n        }\n    }, {\n        key: 'loadAPI',\n        value: function loadAPI() {\n            var self = this;\n\n            if (YoutubeAPIadded && VimeoAPIadded) {\n                return;\n            }\n\n            var src = '';\n\n            // load Youtube API\n            if (self.type === 'youtube' && !YoutubeAPIadded) {\n                YoutubeAPIadded = 1;\n                src = 'https://www.youtube.com/iframe_api';\n            }\n\n            // load Vimeo API\n            if (self.type === 'vimeo' && !VimeoAPIadded) {\n                VimeoAPIadded = 1;\n                src = 'https://player.vimeo.com/api/player.js';\n            }\n\n            if (!src) {\n                return;\n            }\n\n            // add script in head section\n            var tag = document.createElement('script');\n            var head = document.getElementsByTagName('head')[0];\n            tag.src = src;\n\n            head.appendChild(tag);\n\n            head = null;\n            tag = null;\n        }\n    }, {\n        key: 'onAPIready',\n        value: function onAPIready(callback) {\n            var self = this;\n\n            // Youtube\n            if (self.type === 'youtube') {\n                // Listen for global YT player callback\n                if ((typeof YT === 'undefined' || YT.loaded === 0) && !loadingYoutubePlayer) {\n                    // Prevents Ready event from being called twice\n                    loadingYoutubePlayer = 1;\n\n                    // Creates deferred so, other players know when to wait.\n                    window.onYouTubeIframeAPIReady = function () {\n                        window.onYouTubeIframeAPIReady = null;\n                        loadingYoutubeDefer.resolve('done');\n                        callback();\n                    };\n                } else if ((typeof YT === 'undefined' ? 'undefined' : _typeof(YT)) === 'object' && YT.loaded === 1) {\n                    callback();\n                } else {\n                    loadingYoutubeDefer.done(function () {\n                        callback();\n                    });\n                }\n            }\n\n            // Vimeo\n            if (self.type === 'vimeo') {\n                if (typeof Vimeo === 'undefined' && !loadingVimeoPlayer) {\n                    loadingVimeoPlayer = 1;\n                    var vimeoInterval = setInterval(function () {\n                        if (typeof Vimeo !== 'undefined') {\n                            clearInterval(vimeoInterval);\n                            loadingVimeoDefer.resolve('done');\n                            callback();\n                        }\n                    }, 20);\n                } else if (typeof Vimeo !== 'undefined') {\n                    callback();\n                } else {\n                    loadingVimeoDefer.done(function () {\n                        callback();\n                    });\n                }\n            }\n\n            // Local\n            if (self.type === 'local') {\n                callback();\n            }\n        }\n    }]);\n\n    return VideoWorker;\n}();\n\nexports.default = VideoWorker;\n\n/***/ })\n/******/ ]);"]}